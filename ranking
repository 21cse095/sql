select score,DENSE_RANK() OVER (order by score desc) as "RANK" from Scores;

Problem statement
Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no "holes" between ranks.

+----+-------+
| Id | Score |
+----+-------+
| 1  | 3.50  |
| 2  | 3.65  |
| 3  | 4.00  |
| 4  | 3.85  |
| 5  | 4.00  |
| 6  | 3.65  |
+----+-------+
For example, given the above Scores table, your query should generate the following report (order by highest score):

+-------+---------+
| score | Rank    |
+-------+---------+
| 4.00  | 1       |
| 4.00  | 1       |
| 3.85  | 2       |
| 3.65  | 3       |
| 3.65  | 3       |
| 3.50  | 4       |
+-------+---------+

-------------------------------------------------------------------------------------------------
| Function       | Use                                           |
| -------------- | --------------------------------------------- |
| `RANK()`       | Gives same rank to duplicates (1, 2, 2, 4)    |
| `DENSE_RANK()` | Same rank to duplicates but no gaps (1,2,2,3) |
| `ROW_NUMBER()` | Unique row number for each row                |
| `LAG()`        | Compare with previous row value               |
| `LEAD()`       | Compare with next row value                   |
